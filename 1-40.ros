#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(defpackage :ros.script.1-40.3673777373
  (:use :cl))
(in-package :ros.script.1-40.3673777373)

(defvar dx 0.00001)
(defvar tolerance 0.00001)

(defun deriv (g)
    (lambda (x) (/ (- (funcall g (+ x dx)) (funcall g x)) dx)))

(defun cube (x) (* x x x))

(defun square (x) (* x x))

(defun fixed-point (f first-guess )
  (labels ((close-enough? (v1 v2)
             (< (abs (- v1 v2 ))
                tolerance))
           (try (guess)
             (let ((next (funcall f guess)))
               (if (close-enough? guess next)
                   next
                   (try next)))))
    (try first-guess)))


(defun newton-transform (g)
  ;;   x-(g(x) / g'(x))
    (lambda (x) (- x (/ (funcall g x) (funcall (deriv g) x)))))

(defun newtons-method (g guess)
  (fixed-point (funcall #'newton-transform g) guess))

(defun cubic (a b c)
  (lambda (x)
     (+ (cube x)
        (* a (square x))
        (* b x)
        c)))

(defun main (&rest argv)
  (declare (ignorable argv))
  (format t "~G ~%" (newtons-method (cubic -2 -1 12) 1)))
;;; vim: set ft=lisp lisp:
