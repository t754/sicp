#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  )

;; (defpackage :ros.script.1-45.3674386603
;;   (:use :cl))
;; (in-package :ros.script.1-45.3674386603)

(defun compose (f g)
  (lambda (x) (funcall f (funcall g x))))

(defun repeated (f n)
  (labels ((iter (f acc n)
             (if (< n 1)
                 acc
                 (iter f (compose f acc) (1- n)))))
    (iter f #'identity n)))

(defun average (x y)
  (/ (+ x y) 2))

(defun average-damp (f)
  (lambda (x) (average x (funcall f x))))

(defvar tolerance 0.00001)
(defun fixed-point (f first-guess)
  (labels ((close-enough? (v1 v2)
             (< (abs (- v1 v2 ))
                tolerance))
           (try (guess)
             ;; (break)
             (let ((next (funcall f guess)))
               (if (close-enough? guess next)
                   next
                   (try next)))))
    (try first-guess)))


(defun nth-root (y n cnt)
  (fixed-point
   (repeated
    (lambda (x) (funcall
                 (average-damp
                  (lambda (g) (/ y (expt g (1- n)))))
                 x))
    cnt)
   1.0))

;; SOMEDAYS: 調査はいつか
(defun main (a b c &rest argv)
  (declare (ignorable argv))
  (let ((x (parse-integer a))
        (n (parse-integer b))
        (cnt (parse-integer c)))
    (format t "~D ~F~%" cnt (nth-root x n cnt))))
;;; vim: set ft=lisp lisp:
