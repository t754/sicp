#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(defpackage :ros.script.1-6.3670852830
  (:use :cl)
  (:shadow #:sqrt))
(in-package :ros.script.1-6.3670852830)

(defun new-if (predicate then-clause else-clause)
  (cond (predicate then-clause)
        (t else-clause)))
;; ↑ 引数評価されて,無限再帰に陥る
;; ↓ 引数評価されない ちゃんと収縮する
(defmacro new2-if (a b d)
  `(cond (,a ,b)
         (t ,d)))
(defun average (x y)
  (/ (+ x y) 2))
(defun square (x)
  (* x x))

(defun improve (guess x)
  (average guess (/ x guess)))
(defun good-enough? (guess x)
  (< (abs (- (square guess) x)) 0.001))

(defun sqrt-iter (guess x)
  (new2-if (good-enough? guess x)
           guess
           (sqrt-iter (improve guess x)
                      x)))

(defun sqrt (x)
  (sqrt-iter 1.0 x))

(defun main (&rest argv)
  (declare (ignorable argv))
  (loop for x in '(1 2 3 4 99)
     do (format t "~& sqrt(~g) = ~g ~%" x (sqrt x))))
;;; vim: set ft=lisp lisp:
