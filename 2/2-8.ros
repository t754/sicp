#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  )

(defpackage :ros.script.2-8.3675506379
  (:use :cl))
(in-package :ros.script.2-8.3675506379)
(defun make-interval (a b)
  (cons a b))
(defun upper-bound (x)
  (max (car x) (cdr x)))
(defun lower-bound (x)
  (min (car x) (cdr x)))



(defun add-interval (x y)
    (make-interval (+ ( lower-bound x) (lower-bound y))
                   (+ ( upper-bound x) (upper-bound y))))

(defun sub-interval (x y)
  (make-interval (- (lower-bound x) (upper-bound y))
                 (- (lower-bound y) (upper-bound x))))

(defun mul-interval (x y)
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (lower-bound x) (upper-bound y)))
        (p3 (* (upper-bound x) (lower-bound y)))
        (p4 (* (upper-bound x) (upper-bound y))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))

(defun div-interval (x y)
  (mul-interval x (make-interval (/ 1.0 (upper-bound y))
                                 (/ 1.0 (lower-bound y)))))




(defun main (&rest argv)
  (declare (ignorable argv))
  (dolist (s-exp
            '((sub-interval (make-interval 2 1)
               (make-interval -1 4))
              (sub-interval (make-interval 1 0)
               (make-interval 4 9))
              (sub-interval (make-interval 1 2)
               (make-interval 4 3))))
    (format t "~S => ~S~%" s-exp (eval s-exp))))
;;; vim: set ft=lisp lisp:
