#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(swank printv) :silent t)
  )

(defpackage :ros.script.3-2.3696169661
  (:use :cl))
(in-package :ros.script.3-2.3696169661)

(defun make-monitored (func)
  (let ((mf 0))
    (labels ((how-many-calls? () mf)
             (reset-count () (setq mf 0)))
      (lambda (x)
        (cond ((eq x 'how-many-calls?) (funcall #'how-many-calls?))
              ((eq x 'reset-count) (funcall #'reset-count))
              (t (setq mf (1+ mf))
                 (funcall func x)))))))


(defun main (&rest argv)
  (declare (ignorable argv))
  (setq printv:*printv-output* *standard-output*)
  (printv:printv
   (defvar *s* (make-monitored #'sqrt))
   (funcall *s* 'how-many-calls?)
   (funcall *s* 100)
   (funcall *s* 'how-many-calls?)
   (funcall *s* 2)
   (funcall *s* 'how-many-calls?)
   (funcall *s* 'reset-count)
   (funcall *s* 'how-many-calls?)
   (funcall *s* 3)
   (funcall *s* 'how-many-calls?)))
;;; vim: set ft=lisp lisp:
