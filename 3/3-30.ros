#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(swank printv) :silent t)
  )

(defpackage :ros.script.3-30.3704375785
  (:use :cl))
(in-package :ros.script.3-30.3704375785)



(defun full-adder (a b c-in sum c-out)
  (let ((s (make-wire))
        (c1 (make-wire))
        (c2 (make-wire)))
    (half-adder b c-in s c1)
    (half-adder a s sum c2)
    (or-gate c1 c2 c-out)
    'ok))


(defun ripple-carry-adder (listA listB listS c-out)
  (labels ((adder-iter (lisA lisB c lisS)
             (unless  (or (null lisA) (null listB) (null lisS))
               (let ((co (make-wire)))
                 (full-adder (car lisA)
                             (car lisB)
                             c
                             (car lisS)
                             co)
                 (adder-iter (cdr lisA) (cdr lisB) co (cdr lisS))))))
    (adder-iter listA listB (make-wire) listS)
    'ok))


(defun main (&rest argv)
  (declare (ignorable argv))
  (setq printv:*printv-output* *standard-output*)
  (printv:printv))
;;; vim: set ft=lisp lisp:
